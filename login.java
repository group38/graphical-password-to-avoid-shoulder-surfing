/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author pro
 */
public class login extends javax.swing.JPanel {
    /**
     * Creates new form login
     */
    public static Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    Color db_color=null;
    String db_password="";
      boolean email_verified = false;
      Color [] color_set ={Color.BLUE,Color.YELLOW,Color.ORANGE,Color.LIGHT_GRAY,Color.RED,Color.PINK,Color.CYAN,Color.GREEN};
     
      
      public char[][] number_set={{'7','6'},{'5','4'},{'3','2'},{'g','h'},{'e','f'},{'c','d'},{'b','a'},{'1','8'},};
      //={{'7','6'},{'5','4'},{'3','2'},{'g','h'},{'e','f'},{'c','d'},{'b','a'},{'1','8'},};

       
 /*   public void suffle()
    { Random rand = new Random();
        int randomNum = rand.nextInt((8 - 1) + 1) + 1;
         System.out.println("random num="+randomNum);
        if(randomNum==1)
        {
        char[][] num={{'7','6'},{'5','4'},{'3','2'},{'g','h'},{'e','f'},{'c','d'},{'b','a'},{'1','8'},};
        number_set=num;
        }
        else if(randomNum==2)
        {
        char[][] num={{'4','b'},{'8','f'},{'1','5'},{'c','g'},{'2','d'},{'h','6'},{'3','e'},{'7','a'},};
        number_set=num;
        }
         else if(randomNum==3)
        {
        char[][] num={{'c','d'},{'6','1'},{'a','3'},{'2','b'},{'h','f'},{'4','5'},{'g','e'},{'8','7'},};
        number_set=num;
        }
          else if(randomNum==4)
        {
        char[][] num={{'8','6'},{'f','7'},{'2','e'},{'5','4'},{'c','g'},{'3','h'},{'b','d'},{'1','a'},};
        number_set=num;
        }
          else if(randomNum==5)
        {
        char[][] num={{'5','1'},{'d','c'},{'8','2'},{'7','b'},{'6','g'},{'4','a'},{'g','h'},{'3','e'},};
        number_set=num;
        }
          else if(randomNum==6)
        {
        char[][] num={{'a','1'},{'b','5'},{'h','2'},{'f','7'},{'e','3'},{'d','4'},{'g','6'},{'c','8'},};
        number_set=num;
        }
          else if(randomNum==7)
        {
        char[][] num={{'2','6'},{'h','1'},{'g','e'},{'3','f'},{'b','d'},{'c','5'},{'4','a'},{'7','8'},};
        number_set=num;
        }
          else if(randomNum==8)
        {
        char[][] num={{'h','6'},{'b','a'},{'1','2'},{'c','e'},{'5','g'},{'4','3'},{'d','8'},{'7','f'},};
        number_set=num;
        }
    }
    */
   public login() {
        initComponents();     
        btn_anti_clock_rotate.setVisible(false);
        btn_clock_rotate.setVisible(false);
        btn_outer_orbit.setVisible(false);
        btn_inner_orbit.setVisible(false);
        txt_password.setEditable(false);
        txt_password.setEnabled(false);
        txt_password.setVisible(false);
        lbl_password.setVisible(false);
        btn_confirm.setVisible(false);
        btn_clear.setVisible(false);
    }
   
     public void rotate_anti_clock()
     {
        int i=0;
        Color c = color_set[0];
        for(i=0;i<7;i++)
        {
           color_set[i] = color_set[i+1];
        }
        color_set[i]=c;
     }
     
     public void rotate_clock()
     {
        int i=7;
        Color c = color_set[7];
        for(i=7;i>0;i--)
        {
           color_set[i] = color_set[i-1];
        }
        color_set[i]=c;
     }
     
     public void paintComponent(Graphics g) {
        int i=0;
        if(email_verified == false)
            return;
        for(i=0;i<8;i++)
        {
            g.setColor(color_set[i]);
            g.fillArc(170, 100, 200,200, i*45,45);
        }
        g.setColor(Color.BLACK);
        g.drawString("4", 285, 130);
        g.drawString("5", 285, 160);
        g.drawString("2", 245, 130);
        g.drawString("3", 245, 160);
        g.drawString("6", 335, 160);
        g.drawString("7", 315, 190);
        g.drawString("1", 325, 220);
        g.drawString("8", 345, 250);
        g.drawString("b", 295, 250);
        g.drawString("a", 305, 270);
        g.drawString("c", 255, 250);
        g.drawString("d", 235, 270);
        g.drawString("e", 225, 220);
        g.drawString("f", 195, 220);
        g.drawString("g", 225, 190);
        g.drawString("h", 195, 190);
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        btn_anti_clock_rotate = new javax.swing.JButton();
        btn_clock_rotate = new javax.swing.JButton();
        btn_outer_orbit = new javax.swing.JButton();
        btn_inner_orbit = new javax.swing.JButton();
        btn_confirm = new javax.swing.JButton();
        lbl_password = new javax.swing.JLabel();
        txt_password = new javax.swing.JTextField();
        btn_email_verify = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 255, 255));
        setForeground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Login");

        jLabel2.setText("Email");

        btn_anti_clock_rotate.setText("Anti-Clockwise Rotation");
        btn_anti_clock_rotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_anti_clock_rotateActionPerformed(evt);
            }
        });

        btn_clock_rotate.setText("Clockwise Rotation");
        btn_clock_rotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clock_rotateActionPerformed(evt);
            }
        });

        btn_outer_orbit.setText("Outer Orbit");
        btn_outer_orbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_outer_orbitActionPerformed(evt);
            }
        });

        btn_inner_orbit.setText("Inner Orbit");
        btn_inner_orbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inner_orbitActionPerformed(evt);
            }
        });

        btn_confirm.setText("Confirm");
        btn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmActionPerformed(evt);
            }
        });

        lbl_password.setText("Password:");

        txt_password.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passwordActionPerformed(evt);
            }
        });

        btn_email_verify.setBackground(new java.awt.Color(0, 204, 204));
        btn_email_verify.setText("Verify");
        btn_email_verify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_email_verifyActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(btn_anti_clock_rotate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btn_outer_orbit)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btn_inner_orbit))
                    .addComponent(btn_clock_rotate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(lbl_password)
                .addGap(18, 18, 18)
                .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btn_confirm)
                .addGap(156, 156, 156))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(89, 89, 89)
                        .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_clear)
                            .addComponent(btn_email_verify))
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(264, 264, 264))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btn_email_verify))
                .addGap(247, 247, 247)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_anti_clock_rotate)
                    .addComponent(btn_clock_rotate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_outer_orbit)
                    .addComponent(btn_inner_orbit)
                    .addComponent(btn_clear))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_confirm)
                    .addComponent(lbl_password)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    private void btn_anti_clock_rotateActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
        rotate_clock();
        this.repaint();
    }                                                     

    private void btn_outer_orbitActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        for(int i=0;i<8;i++)
        {
            if(color_set[i] == db_color)
            {
                char ff=number_set[i][1];
                txt_password.setText(txt_password.getText()+ff);
            }
        }
    }                                               

    private void btn_confirmActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        String pass = txt_password.getText();
        if(pass.equals(db_password))
        {
            JOptionPane.showMessageDialog(null, "Password OK");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Password NOT OK");
        }
    }                                           

    private void txt_passwordActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void btn_clock_rotateActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        rotate_anti_clock();
        this.repaint();
    }                                                

    private void btn_email_verifyActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        String email= txt_email.getText();
        String sql;
        try
        {
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:mydatabase.sqlite");
        }catch(ClassNotFoundException | SQLException | HeadlessException e)
        {    
            JOptionPane.showMessageDialog(null, e);
        }
        
        sql = "select * from users where email='" + email + "'";
        try
        {
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            if(rs.next())
            {
                String db_email = rs.getString("Email");
                if(db_email.equals(email))
                {
                    JOptionPane.showMessageDialog(null, "EMAIL OK");
                   // suffle();
                    btn_anti_clock_rotate.setVisible(true);
                    btn_clock_rotate.setVisible(true);
                    btn_outer_orbit.setVisible(true);
                    btn_inner_orbit.setVisible(true);
                    txt_password.setVisible(true);
                    lbl_password.setVisible(true);
                    btn_confirm.setVisible(true);
                    btn_clear.setVisible(true);
                    email_verified=true;
                    this.repaint();
                    this.setSize(650, 650);
                    db_password = rs.getString("Password");
                    String col = rs.getString("Color");
                    if(col.equals("Blue"))
                    {
                       db_color=Color.BLUE; 
                    }
                    else if(col.equals("Yellow"))
                    {
                       db_color=Color.YELLOW; 
                    }
                    else if(col.equals("Orange"))
                    {
                       db_color=Color.ORANGE; 
                    }
                    else if(col.equals("Grey"))
                    {
                       db_color=Color.LIGHT_GRAY; 
                    }else if(col.equals("Red"))
                    {
                       db_color=Color.RED; 
                    }
                    else if(col.equals("Pink"))
                    {
                       db_color=Color.PINK; 
                    }
                    else if(col.equals("Cyan"))
                    {
                       db_color=Color.CYAN; 
                    }
                    else if(col.equals("Green"))
                    {
                       db_color=Color.GREEN; 
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "EMAIL ERROR");
                }
                conn.close();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Login ERROR");   
            }
        }
        
        catch(SQLException | HeadlessException e)
        {
          JOptionPane.showMessageDialog(null, e);          
        }
    }                                                

    private void btn_inner_orbitActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        for(int i=0;i<8;i++)
        {
            if(color_set[i] == db_color)
            {
                char ff=number_set[i][0];
                txt_password.setText(txt_password.getText()+ff);
            }
        }
    }                                               

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        txt_password.setText("");
    }                                         


    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_anti_clock_rotate;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_clock_rotate;
    private javax.swing.JButton btn_confirm;
    private javax.swing.JButton btn_email_verify;
    private javax.swing.JButton btn_inner_orbit;
    private javax.swing.JButton btn_outer_orbit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_password;
    // End of variables declaration                   
}
